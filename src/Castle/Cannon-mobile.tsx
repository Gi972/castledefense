/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ../../../../public/pirate/GLBformat/cannon-mobile.glb -t -k 
*/

import * as THREE from "three";
import { type JSX } from "react";
import { useGLTF } from "@react-three/drei";
import type { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["cannon-mobile_1"]: THREE.Mesh;
    Group: THREE.Mesh;
    Group_1: THREE.Mesh;
  };
  materials: {
    colormap: THREE.MeshStandardMaterial;
  };
};

export function CannonMobile(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/public/pirate/GLBformat/cannon-mobile.glb"
  ) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        name="cannon-mobile_1"
        geometry={nodes["cannon-mobile_1"].geometry}
        material={materials.colormap}
      >
        <mesh
          name="Group"
          geometry={nodes.Group.geometry}
          material={materials.colormap}
          position={[-0.229, 0.625, -0.825]}
          rotation={[0, 0, 0.262]}
        />
        <mesh
          name="Group_1"
          geometry={nodes.Group_1.geometry}
          material={materials.colormap}
          position={[0.519, 0.547, -0.825]}
          rotation={[0, 0, -0.262]}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/public/pirate/GLBformat/cannon-mobile.glb");
